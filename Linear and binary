#include <iostream>
using namespace std;

// Function for Linear Search
int linearSearch(int arr[], int n, int key)
{
    for (int i = 0; i < n; i++)
    {
        if (arr[i] == key)
            return i; // Element found
    }
    return -1; // Element not found
}

// Function for Binary Search
int binarySearch(int arr[], int n, int key)
{
    int low = 0, high = n - 1;
    while (low <= high)
    {
        int mid = (low + high) / 2;

        if (arr[mid] == key)
            return mid; // Element found
        else if (arr[mid] < key)
            low = mid + 1; // Search in right half
        else
            high = mid - 1; // Search in left half
    }
    return -1; // Element not found
}

int main()
{
    int n, key, choice;
    cout << "Enter number of customer account IDs: ";
    cin >> n;

    int arr[n];
    cout << "Enter " << n << " customer account IDs (sorted for binary search):\n";
    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
    }

    cout << "Enter account ID to search: ";
    cin >> key;

    cout << "\n1. Linear Search\n2. Binary Search\nEnter your choice: ";
    cin >> choice;

    int result = -1;

    switch (choice)
    {
    case 1:
        result = linearSearch(arr, n, key);
        if (result != -1)
            cout << "Account ID found at position " << result + 1 << " (Linear Search)" << endl;
        else
            cout << "Account ID not found (Linear Search)" << endl;
        break;

    case 2:
        result = binarySearch(arr, n, key);
        if (result != -1)
            cout << "Account ID found at position " << result + 1 << " (Binary Search)" << endl;
        else
            cout << "Account ID not found (Binary Search)" << endl;
        break;

    default:
        cout << "Invalid choice!" << endl;
    }

    return 0;
}
